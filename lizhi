#!/usr/bin/ruby

require 'oga'
require 'json'
require 'open-uri'
require 'date'
require 'os'

def get_sound_array(document)
	xpath_base = '//div[contains(@class, "box-title-with-radio-controller")]/following::ul[contains(@class, "audioList")]//'
	index_array = document.xpath(xpath_base + 'span[contains(@class, "radio-list-item-index")]').map { |span| span.text }
	return document.xpath(xpath_base + 'a[contains(@class, "audio-list-item")]').map { |a| [a['title'].gsub(/[\s\(\)\"\'\\\/-]/, '').gsub(/\.mp3/, ''), JSON.parse(open('https://www.lizhi.fm/media/url/' + a['href'].gsub(/^.*\/(\d+)$/, "\\1")).read)['data']['url']] }.map.with_index(0) { |elem, i| [elem[0].match(/^\d/) ? elem[0] : sprintf("%02d%s", index_array[i].to_i, elem[0]), elem[1]] }
end

def fetch_sound_list(url)
	puts 'fetching sound list...'
	document = Oga.parse_html(open(url).read)
	return Hash[document.xpath('//div[contains(@class, "page")]/a[not(@class)]').map{ |a| get_sound_array(Oga.parse_html(open('http://www.lizhi.fm' + a['href']).read)) }.reduce(get_sound_array(document)) { |sum, elem| sum + elem }]
end

def fetch_audio_file(url, name)
	return if File.exist?(name + '.mp3') or url == nil
	puts 'downloading ' + name + '...'
	open(name + '.mp3', 'wb') do |file|
		file << open(url, "Referer" => "http://www.lizhi.fm/box").read
	end
	puts 'download ' + name + ' successfully'
end

def fetch_audio(argv)
	if argv.empty?
		puts "usage: ./lizhi url [filter]"
		exit 1
	end

	url = argv[0]
	filter = argv[1]

	hash = fetch_sound_list(url)
	hash = hash.select{ |key, value| value.force_encoding('UTF-8').match(/#{filter}/) } if filter
	begin
		hash.keys.each do |name|
			url = hash[name]
			fetch_audio_file(url, name)
		end
	rescue Exception => e
		puts "catch one Exception: " + e.message
		puts e.backtrace
	end
end

fetch_audio(ARGV)
